/* ==========================================================================
   1. リセットスタイル
   ========================================================================== */
*,
*::before,
*::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

img {
    max-width: 100%;
    height: auto;
    display: block;
}

/* ==========================================================================
   2. CSS変数定義
   ========================================================================== */
:root {
    /* カラーパレット */
    --primary-dark: #001E37;
    /* 濃い青 */
    --primary: #0056B3;
    /* メインの青 */
    --primary-light: #4D8CC8;
    /* 明るい青 */
    --primary-bg-light: rgba(0, 86, 179, 0.1);
    /* プライマリ系の明るい背景色 (旧 --primary-light のrgba定義) */

    --black: #111111;
    /* ほぼ黒 */
    --dark-gray: #333333;
    /* 暗いグレー */
    --medium-gray: #666666;
    /* 中間グレー */
    --light-gray: #E0E0E0;
    /* 明るいグレー */
    --off-white: #F8F9FA;
    /* オフホワイト */
    --white: #FFFFFF;
    /* 純白 */

    --accent: #00C2FF;
    /* アクセント (明るい青) */
    --danger: #FF3B30;
    /* 危険・エラー (赤) */
    --success: #28A745;
    /* 成功 (緑) */

    /* タイポグラフィ */
    --font-primary: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
    --font-secondary: 'Space Grotesk', sans-serif;
    --font-monospace: 'JetBrains Mono', monospace;

    --text-xs: 0.75rem;
    /* 12px */
    --text-sm: 0.875rem;
    /* 14px */
    --text-base: 1rem;
    /* 16px */
    --text-lg: 1.125rem;
    /* 18px */
    --text-xl: 1.25rem;
    /* 20px */
    --text-2xl: 1.5rem;
    /* 24px */
    --text-3xl: 1.875rem;
    /* 30px */
    --text-4xl: 2.25rem;
    /* 36px */
    --text-5xl: 3rem;
    /* 48px */
    --text-6xl: 3.75rem;
    /* 60px */

    --leading-none: 1;
    --leading-tight: 1.25;
    --leading-normal: 1.5;
    --leading-relaxed: 1.75;

    /* レイアウト */
    --spacing-0: 0;
    --spacing-1: 0.25rem;
    /* 4px */
    --spacing-2: 0.5rem;
    /* 8px */
    --spacing-3: 0.75rem;
    /* 12px */
    --spacing-4: 1rem;
    /* 16px */
    --spacing-5: 1.25rem;
    /* 20px */
    --spacing-6: 1.5rem;
    /* 24px */
    --spacing-8: 2rem;
    /* 32px */
    --spacing-10: 2.5rem;
    /* 40px */
    --spacing-12: 3rem;
    /* 48px */
    --spacing-16: 4rem;
    /* 64px */
    --spacing-20: 5rem;
    /* 80px */
    --spacing-24: 6rem;
    /* 96px */
    --spacing-32: 8rem;
    /* 128px */

    --section-spacing: var(--spacing-24);
    --subsection-spacing: var(--spacing-16);

    /* 外観 */
    --radius-sm: 0.125rem;
    /* 2px */
    --radius-md: 0.25rem;
    /* 4px */
    --radius-lg: 0.5rem;
    /* 8px */
    --radius-xl: 1rem;
    /* 16px */
    --radius-full: 9999px;
    /* 完全な丸 */

    --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
    --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
}

/* ==========================================================================
   3. 基本要素のスタイル
   ========================================================================== */
html {
    height: 100%;
    scroll-behavior: smooth;
    scroll-padding-top: 80px;
    /* 固定ヘッダーの高さを考慮 */
}

body {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    font-family: var(--font-primary);
    font-size: var(--text-base);
    line-height: var(--leading-normal);
    color: var(--black);
}

.main-content-wrapper {
    flex-grow: 1;
    /* フッターを下に固定するため */
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-family: var(--font-secondary);
    font-weight: 500;
    line-height: var(--leading-tight);
}

h1 {
    font-size: var(--text-5xl);
    margin-bottom: 1.5rem;
}

h2 {
    font-size: var(--text-3xl);
    margin-bottom: 1.25rem;
}

h3 {
    font-size: var(--text-2xl);
    margin-bottom: 1rem;
}

p {
    margin-bottom: 1rem;
}

code,
pre {
    font-family: var(--font-monospace);
}

/* ==========================================================================
   4. レイアウトクラス
   ========================================================================== */
.container {
    padding-left: var(--spacing-4);
    padding-right: var(--spacing-4);
}

.section {
    padding-top: var(--section-spacing);
    padding-bottom: var(--section-spacing);
}

.page-header {
    padding-top: 60px;
    /* 必要に応じて調整 */
    background-color: var(--off-white);
}

/* サービスセクション全体の余白調整 */
#services {
    padding-top: 5rem;
    padding-bottom: 5rem;
}

/* カード間の間隔用 (Bootstrapの g-4 は gutter を制御) */
.row.g-4 {
    /* margin-bottom: 3rem; */
    /* 必要であれば復活させる */
}

/* ==========================================================================
   5. コンポーネントスタイル
   ========================================================================== */

/* 5.1 ナビゲーション */
.navbar {
    /* Bootstrap Navbar の基本スタイル拡張 */
    box-shadow: var(--shadow-sm);
}

.terra-nav {
    /* カスタムナビゲーション */
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    padding: 1.2rem 0;
    /* 初期高さ */
    z-index: 1000;
    transition: background-color 0.3s ease, padding 0.3s ease;
    will-change: padding;
    /* パフォーマンスヒント */
}

.terra-nav .navbar-brand img {
    height: 50px;
    /* 初期ロゴ高さ */
    transition: height 0.3s ease;
    will-change: height;
}

.terra-nav .nav-link {
    padding: 0.5rem 1rem;
    /* 初期リンクpadding */
    transition: padding 0.3s ease;
}

/* スクロール時のスタイル */
.terra-nav.scrolled {
    background-color: var(--white);
    box-shadow: var(--shadow-md);
    /* 少し濃い影に */
    padding: 0.5rem 0;
    /* スクロール後の高さ */
}

.terra-nav.scrolled .navbar-brand img {
    height: 35px;
    /* スクロール後のロゴ高さ */
}

.terra-nav.scrolled .nav-link {
    padding: 0.4rem 1rem;
    /* スクロール後のリンクpadding */
}

/* ナビゲーションリンク共通スタイル */
.terra-nav-link,
.navbar-dark .terra-nav .nav-link {
    /* より具体的に terra-nav 内のリンクに限定 */
    color: var(--white) !important;
    /* 初期文字色 (Bootstrap上書き用) */
    font-weight: 500;
    position: relative;
    transition: color 0.3s ease;
    /* padding は .terra-nav .nav-link で制御 */
}

.terra-nav-link:hover,
.navbar-dark .terra-nav .nav-link:hover,
.navbar-dark .terra-nav .nav-link:focus {
    color: var(--light-gray) !important;
}

.terra-nav-link.active,
.navbar-dark .terra-nav .nav-link.active {
    color: var(--white) !important;
    font-weight: 700;
}

/* リンク下線アニメーション */
.terra-nav-link::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    /* 中央基点 */
    width: 0;
    height: 2px;
    background-color: var(--primary);
    transition: width 0.3s ease;
    /* left は不要 */
}

.terra-nav-link:hover::after {
    width: 100%;
}

/* 5.2 ボタン */
.btn-primary,
/* Bootstrap ボタンの拡張 */
.terra-btn-primary {
    /* カスタムボタン */
    background-color: var(--primary);
    color: var(--white);
    border-color: var(--primary);
    padding: var(--spacing-3) var(--spacing-6);
    border-radius: var(--radius-md);
    font-weight: 500;
    letter-spacing: 0.025em;
    transition: all 0.3s ease;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    text-decoration: none;
    /* aタグの場合の下線消去 */
}

.btn-primary:hover,
.terra-btn-primary:hover {
    background-color: var(--primary-dark);
    border-color: var(--primary-dark);
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
}

.terra-btn {
    /* 他のカスタムボタン用ベース */
    border-radius: var(--radius-md);
    padding: var(--spacing-2) var(--spacing-4);
    font-weight: 500;
    transition: all 0.3s ease;
}

.terra-btn-rounded {
    border-radius: var(--radius-full);
}

.terra-btn-outline {
    background-color: transparent;
    color: var(--primary);
    border: 1px solid var(--primary);
    padding: var(--spacing-3) var(--spacing-6);
    border-radius: var(--radius-md);
    font-weight: 500;
    transition: all 0.3s ease;
    text-decoration: none;
    /* aタグの場合の下線消去 */
}

.terra-btn-outline:hover {
    background-color: var(--primary);
    color: var(--white);
}

.btn-link {
    /* Bootstrap btn-link の調整 */
    color: var(--primary);
    text-decoration: none;
    transition: color 0.3s ease;
}

.btn-link:hover {
    color: var(--primary-dark);
}

/* 5.3 カード (共通スタイル) */
.card {
    /* Bootstrap Card の基本スタイル拡張 */
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    overflow: hidden;
    /* 画像ズーム用 */
    border: none;
    /* 基本は枠線なし */
}

.card:hover {
    transform: translateY(-5px);
    /* 少し浮かせる */
    box-shadow: var(--shadow-lg);
    /* 影を濃く */
}

.card-img-top {
    height: 200px;
    object-fit: cover;
    transition: transform 0.5s ease;
}

.card:hover .card-img-top {
    transform: scale(1.05);
    /* 画像を少しズーム */
}

/* 5.4 Terra カード (カスタムカード) */
.terra-card {
    height: 100%;
    /* 親要素の高さに合わせる */
    background-color: var(--white);
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-md);
    display: flex;
    /* card-body を flex で制御するため */
    flex-direction: column;
    /* transition, overflow, hover は .card から継承 */
}

.terra-card .card-body {
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    /* .terra-card 内で高さを埋める */
}

/* .terra-card .mt-auto { */
/* card-body が flex なので不要かも */
/* margin-top: auto; */
/* } */

.terra-card .service-icon {
    /* .terra-card 内のアイコン */
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 70px;
    height: 70px;
    border-radius: 50%;
    background-color: var(--primary-bg-light);
    /* 変数名変更 */
    color: var(--primary);
    font-size: 2rem;
    transition: all 0.3s ease;
    margin-bottom: 1rem;
    /* アイコン下のマージン追加 */
}

.terra-card:hover .service-icon {
    background-color: var(--primary);
    color: var(--white);
    transform: scale(1.1);
}

.terra-card h3 {
    /* .terra-card 内の h3 */
    position: relative;
    padding-bottom: 0.5rem;
    margin-bottom: 1rem;
}

/* h3 下線アニメーション */
.terra-card h3::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 50px;
    height: 3px;
    background-color: var(--primary);
    transition: width 0.3s ease;
}

.terra-card:hover h3::after {
    width: 100px;
    /* 少し伸ばす */
}

/* 5.5 サービス関連 */
.service-icon {
    /* 独立したサービスアイコン (例: サービス詳細ページ用？) */
    font-size: 3rem;
    color: var(--primary);
}

.service-detail {
    /* サービス詳細セクション？ */
    padding: 30px 0;
}

.service-icon-large {
    /* 大きなサービスアイコン */
    font-size: 5rem;
    color: var(--primary);
}

/* 5.6 ヒーローセクション */
.hero-section {
    /* background は image-set を優先 (よりモダンな書き方) */
    background-image:
        linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)),
        image-set(url('../images/webp/hero-bg.webp') 1x type('image/webp'),
            /* WebP */
            url('../images/hero-bg.jpg') 1x type('image/jpeg')
            /* JPG フォールバック */
        );
    background-size: cover;
    background-position: center;
    height: 100vh;
    min-height: 500px;
    color: var(--white);
    display: flex;
    align-items: center;
    justify-content: center;
    /* 中央揃え */
}

/* .bg-hero は .hero-section と重複？ 不要なら削除 */
/* .bg-hero { ... } */

/* WebP非対応ブラウザ向けフォールバック (JavaScriptで<html>に.no-webpを付与想定) */
/* 必要ならコメント解除 */
/* .no-webp .hero-section { */
/* background-image: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url('/images/hero-bg.jpg'); */
/* } */

/* 5.7 フォーム (#contact) */
#contact .card {
    /* フォームを含むカード */
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-md);
    /* .card の共通スタイルも適用される */
}

#contact .input-group-text {
    /* フォームのアイコン部分 */
    background-color: var(--primary);
    color: white;
    border: 1px solid var(--primary);
}

#contact .form-control:focus {
    /* フォーム入力欄フォーカス時 */
    border-color: var(--primary-light);
    box-shadow: 0 0 0 0.25rem rgba(0, 86, 179, 0.25);
}

/* フォームエラー表示 */
.invalid-feedback,
.text-danger {
    /* .text-danger もエラー表示に使われる可能性 */
    display: block;
    /* 常に表示領域確保 */
    color: var(--danger);
    /* 変数使用 */
    font-weight: 500;
    padding-top: 0.25rem;
    /* 少し詰める */
    /* animation: shake 0.5s ease-in-out; */
    /* エラー表示時のアニメーションは shake セクションで */
}

.is-invalid {
    /* エラー時の入力欄スタイル */
    border-color: var(--danger) !important;
    /* Bootstrap 上書き */
    box-shadow: 0 0 0 0.25rem rgba(255, 59, 48, 0.25) !important;
    /* 変数 --danger の色に合わせる */
}

/* エラーメッセージ前のアイコン */
.is-invalid+.invalid-feedback::before {
    content: "⚠️ ";
    margin-right: 0.25rem;
}

/* reCAPTCHA スタイル */
.g-recaptcha {
    margin-bottom: 1rem;
    display: inline-block;
    transform-origin: left top;
    transform: scale(0.95);
    /* 少し小さく表示 */
}

.g-recaptcha.error {
    /* reCAPTCHA エラー時 (JSでクラス付与想定？) */
    border: 1px solid var(--danger);
    border-radius: 4px;
    animation: shake 0.5s ease-in-out;
    /* エラー時に揺らす */
}

/* 5.8 タイムライン */
.timeline {
    position: relative;
    padding: 20px 0;
    list-style: none;
    /* li 要素想定 */
    margin-left: 0;
    /* デフォルトの ul/ol スタイル解除 */
}

.timeline::before {
    /* 中央の縦線 */
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    width: 3px;
    background: var(--primary);
    left: 50%;
    transform: translateX(-50%);
}

.timeline-item {
    margin-bottom: 40px;
    position: relative;
    padding: 20px;
    background: var(--white);
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-md);
    transition: transform 0.3s ease;
}

.timeline-item:hover {
    transform: translateY(-5px);
}

.timeline-year {
    /* 年表示バッジ */
    position: absolute;
    width: auto;
    /* コンテンツに合わせる */
    min-width: 100px;
    /* 最小幅 */
    background: var(--primary);
    color: var(--white);
    text-align: center;
    padding: 5px 10px;
    border-radius: var(--radius-md);
    top: -15px;
    left: 50%;
    transform: translateX(-50%);
    font-size: var(--text-sm);
}

/* 5.9 チームセクション */
.team-card {
    /* チームメンバーカード？ */
    overflow: hidden;
    /* 画像オーバーレイ用 */
    /* transition, hover は .card から継承 */
}

.team-overlay {
    /* ホバー時表示のオーバーレイ？ */
    opacity: 0;
    /* 初期状態は非表示 */
    transition: opacity 0.3s ease;
    background-color: rgba(0, 0, 0, 0.5);
    /* 例: 半透明の黒 */
    /* position: absolute; top: 0; left: 0; width: 100%; height: 100%; などが必要 */
}

.team-card:hover .team-overlay {
    opacity: 1 !important;
    /* Bootstrap 上書き想定 */
}


/* ==========================================================================
   6. アニメーション
   ========================================================================== */
/* フェードイン（下から） */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.animate-fade-in {
    opacity: 0;
    /* 初期状態 */
    animation: fadeIn 1s ease-in-out forwards;
}

.animate-fade-in-delayed {
    opacity: 0;
    animation: fadeIn 1s ease-in-out 0.3s forwards;
    /* 0.3秒遅延 */
}

.animate-fade-in-delayed-more {
    opacity: 0;
    animation: fadeIn 1s ease-in-out 0.6s forwards;
    /* 0.6秒遅延 */
}

/* スクロール時のフェードイン（下から） */
.animate-on-scroll {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
}

.fade-in-up {
    /* JS で isIntersecting 時に付与するクラス */
    opacity: 1;
    transform: translateY(0);
}

/* ヒーローセクション内要素のホバーアニメーション？ (重複の可能性) */
/* .hero-section:hover .animate-fade-in-delayed-more { */
/* opacity: 1; */
/* transform: translateY(0); */
/* } */

/* シェイクアニメーション（エラー表示用） */
@keyframes shake {

    0%,
    100% {
        transform: translateX(0);
    }

    10%,
    30%,
    50%,
    70%,
    90% {
        transform: translateX(-5px);
    }

    20%,
    40%,
    60%,
    80% {
        transform: translateX(5px);
    }
}

/* .g-recaptcha.error や .invalid-feedback で使用 */


/* ==========================================================================
   7. ユーティリティクラス
   ========================================================================== */
.display-title {
    /* ヒーローセクションなどの大きなタイトル */
    font-size: var(--text-6xl);
    font-weight: 700;
    letter-spacing: -0.025em;
}

.text-muted {
    color: var(--dark-gray) !important;
    /* Bootstrap 上書き */
}

.bg-primary {
    background-color: var(--primary) !important;
    /* Bootstrap 上書き */
}

.bg-light {
    background-color: var(--off-white) !important;
    /* Bootstrap 上書き */
}

.badge {
    /* Bootstrap Badge の基本スタイル拡張 */
    font-weight: 500;
    letter-spacing: 1px;
    text-transform: uppercase;
    font-size: var(--text-xs);
    /* 少し小さく */
    padding: 0.4em 0.8em;
    /* padding調整 */
}

/* アイコンサイズ指定用 */
.icon-size-5rem {
    font-size: 5rem;
    vertical-align: middle;
    /* 縦位置調整 */
}

/* 背景画像用 */
.tech-vision-background {
    background-image: linear-gradient(rgba(0, 30, 55, 0.8), rgba(0, 30, 55, 0.9)),
        url('/images/jpg/tech-vision-bg.jpg');
    /* フォールバック */
    background-image: linear-gradient(rgba(0, 30, 55, 0.8), rgba(0, 30, 55, 0.9)),
        url('/images/webp/tech-vision-bg.webp');
    /* WebP 優先 */
    background-size: cover;
    background-position: center;
}

/* アイコンボックスの固定サイズ用 */
.icon-box-fixed-size {
    width: 50px;
    height: 50px;
}


/* ==========================================================================
   8. アクセシビリティ
   ========================================================================== */
.sr-only {
    /* スクリーンリーダー用 */
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
}

/* フォーカス時のアウトライン */
input:focus,
button:focus,
a:focus,
textarea:focus {
    outline: 2px solid var(--primary-light);
    /* 少し柔らかい色に */
    outline-offset: 2px;
    box-shadow: 0 0 0 0.2rem rgba(0, 86, 179, 0.25);
    /* Bootstrap の focus リングに似せる */
}

/* ==========================================================================
   9. メディアクエリ (レスポンシブ調整)
   ========================================================================== */
/* 中サイズデバイス (タブレットなど) */
@media (max-width: 768px) {
    .section {
        padding-top: var(--spacing-16);
        padding-bottom: var(--spacing-16);
    }

    h1 {
        font-size: var(--text-4xl);
    }

    h2 {
        font-size: var(--text-2xl);
    }

    .display-4 {
        font-size: 2.5rem;
    }

    /* Bootstrap display クラス調整 */
    .display-title {
        font-size: var(--text-5xl);
    }

    .hero-section {
        min-height: 400px;
        /* 高さを少し抑える */
        padding: 80px 0;
        /* padding 追加 */
    }

    .hero-section .lead {
        /* ヒーローのリード文 */
        font-size: 1rem;
    }

    /* タイムライン調整 (左寄せ) */
    .timeline::before {
        left: 30px;
        transform: none;
    }

    .timeline-item {
        padding-left: 50px;
        /* アイテムの左にスペース */
    }

    .timeline-year {
        left: 30px;
        transform: translateX(-50%);
        /* 位置調整 */
    }

    /* サービスカード */
    .terra-card {
        /* このブレークポイントでマージンは不要かも？ .row.g-4 があれば */
    }
}

/* 小サイズデバイス (スマートフォンなど) */
@media (max-width: 576px) {
    .section {
        padding-top: var(--spacing-12);
        padding-bottom: var(--spacing-12);
    }

    h1 {
        font-size: var(--text-3xl);
    }

    .display-4 {
        font-size: 2rem;
    }

    .display-title {
        font-size: var(--text-4xl);
    }

    /* reCAPTCHA サイズ調整 */
    .g-recaptcha {
        transform: scale(0.85);
    }

    /* サービスカード */
    .terra-card {
        margin-bottom: 1.5rem;
        /* カード間の縦マージン */
    }

    .service-icon-large {
        font-size: 3rem;
        /* 少し小さく */
    }
}